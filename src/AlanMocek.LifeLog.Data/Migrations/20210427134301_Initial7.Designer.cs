// <auto-generated />
using System;
using AlanMocek.LifeLog.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlanMocek.LifeLog.Data.Migrations
{
    [DbContext(typeof(LifeLogContext))]
    [Migration("20210427134301_Initial7")]
    partial class Initial7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("AlanMocek.LifeLog.Core.Activities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasDiscriminator<string>("Type").HasValue("Activity");
                });

            modelBuilder.Entity("AlanMocek.LifeLog.Core.DayRecords.DayRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DayRecords");
                });

            modelBuilder.Entity("AlanMocek.LifeLog.Core.Activities.ClockActivity", b =>
                {
                    b.HasBaseType("AlanMocek.LifeLog.Core.Activities.Activity");

                    b.HasDiscriminator().HasValue("activity_clock");
                });

            modelBuilder.Entity("AlanMocek.LifeLog.Core.Activities.OccurrenceActivity", b =>
                {
                    b.HasBaseType("AlanMocek.LifeLog.Core.Activities.Activity");

                    b.HasDiscriminator().HasValue("activity_occurrence");
                });

            modelBuilder.Entity("AlanMocek.LifeLog.Core.Activities.QuantityActivity", b =>
                {
                    b.HasBaseType("AlanMocek.LifeLog.Core.Activities.Activity");

                    b.HasDiscriminator().HasValue("activity_quantity");
                });

            modelBuilder.Entity("AlanMocek.LifeLog.Core.Activities.TimeActivity", b =>
                {
                    b.HasBaseType("AlanMocek.LifeLog.Core.Activities.Activity");

                    b.HasDiscriminator().HasValue("activity_time");
                });
#pragma warning restore 612, 618
        }
    }
}
